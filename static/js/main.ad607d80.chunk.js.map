{"version":3,"sources":["serviceWorker.js","config/firebaseConfig.js","store/actions/actionCreators.js","store/reducers/authReducer.js","store/reducers/todoListReducer.js","store/reducers/rootReducer.js","components/navbar/LoggedInLinks.js","store/database/asynchHandler.js","components/navbar/LoggedOutLinks.js","components/navbar/Navbar.js","components/register_screen/RegisterScreen.js","components/login_screen/LoginScreen.js","components/home_screen/TodoListCard.js","components/home_screen/TodoListLinks.js","components/home_screen/HomeScreen.js","components/list_screen/ItemCard.js","components/list_screen/ItemsList.js","components/list_screen/ListScreen.js","components/edit_screen/EditItem.js","test/DatabaseTester.js","App.js","store/ReactReduxFirebaseApp.js","index.js"],"names":["Boolean","window","location","hostname","match","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","registerSuccess","type","registerError","error","logoutSuccess","initState","authReducer","state","action","authError","err","message","todoLists","todoListReducer","rootReducer","combineReducers","auth","todoList","firestore","firestoreReducer","firebaseReducer","LoggedInLinks","handleLogout","props","signOut","profile","this","className","to","onClick","initials","React","Component","compose","firebaseConnect","connect","dispatch","getState","then","actionCreators","logoutHandler","LoggedOutLinks","Navbar","links","uid","RegisterScreen","email","password","firstName","lastName","handleChange","e","target","setState","id","value","handleSubmit","preventDefault","newUser","register","onSubmit","htmlFor","name","onChange","getFirestore","createUserWithEmailAndPassword","resp","collection","doc","user","set","catch","registerHandler","LoginScreen","authData","credentials","login","signInWithEmailAndPassword","console","log","loginHandler","TodoListCard","TodoListLinks","map","key","ordered","HomeScreen","redirect","redirect_list","handleNewList","fireStore","temp","Date","getTime","l","Object","keys","length","add","owner","items","Array","time","list","forceUpdate","large","data","firestoreConnect","orderBy","ItemCard","i","item","update","k","j","pop","s","description","assigned_to","due_date","completed","floating","fab","direction","moveUp","moveDown","deleteItem","ItemsList","currentItemSortCriteria","newItemSortCriteria","flipped","sortingCriteria","flip","sort","compareTaskFlip","compareDueDateFlip","compareStatusFlip","compareTask","compareDueDate","compareStatus","item1","item2","sortTasks","ownProps","ListScreen","document","getElementById","deleteList","delete","header","trigger","modal","label","params","EditItem","index","todoItem","blank","assigned","due","comp","checked","newItems","push","setItemProperty","submit","cancel","DatabaseTester","handleClear","get","querySnapshot","forEach","handleReset","todoJson","todoListJson","App","isLoaded","exact","path","component","ReactReduxFirebaseApp","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunk","withExtraArgument","getFirebase","reduxFirestore","rrfProps","config","useFirestoreForProfile","userProfile","attachAuthIsReady","createFirestoreInstance","ReactDOM","render"],"mappings":"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","file":"static/js/main.ad607d80.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}","import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\n// THIS IS USED TO INITIALIZE THE firebase OBJECT\n// PUT YOUR FIREBASE PROJECT CONFIG STUFF HERE\nvar firebaseConfig = {\n    apiKey: \"AIzaSyCjQ8vVMu1FN0v7q28yx85n8aNUJmDWMbA\",\n    authDomain: \"todo-rrf-e05ea.firebaseapp.com\",\n    databaseURL: \"https://todo-rrf-e05ea.firebaseio.com\",\n    projectId: \"todo-rrf-e05ea\",\n    storageBucket: \"todo-rrf-e05ea.appspot.com\",\n    messagingSenderId: \"817088435991\",\n    appId: \"1:817088435991:web:24f24c26cc4161ef25c952\",\n    measurementId: \"G-NWCPE2N4S5\"\n  };\n// var firebaseConfig = {\n//     apiKey: \"AIzaSyCJxkqx-6PMJrZ7ACkrgbO55b5wmJdop1Y\",\n//     authDomain: \"todo-rrf-316.firebaseapp.com\",\n//     databaseURL: \"https://todo-rrf-316.firebaseio.com\",\n//     projectId: \"todo-rrf-316\",\n//     storageBucket: \"todo-rrf-316.appspot.com\",\n//     messagingSenderId: \"892398996038\",\n//     appId: \"1:892398996038:web:1fb9157fc6c5d266e01847\",\n//     measurementId: \"G-TEGQB3MZ23\"\n// };\nfirebase.initializeApp(firebaseConfig);\n\n// NOW THE firebase OBJECT CAN BE CONNECTED TO THE STORE\nexport default firebase;","// THIS FILE KNOWS HOW TO MAKE ALL THE ACTION\n// OBJECDTS THAT WE WILL USE. ACTIONS ARE SIMPLE\n// LITTLE PACKAGES THAT REPRESENT SOME EVENT\n// THAT WILL BE DISPATCHED TO THE STORE, WHICH\n// WILL TRIGGER THE EXECUTION OF A CORRESPONDING\n// REDUCER, WHICH ADVANCES STATE\n\n// THESE ARE ALL THE TYPE OF ACTIONS WE'LL BE CREATING\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\nexport const REGISTER_ERROR = 'REGISTER_ERROR';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_ERROR = 'LOGIN_ERROR';\nexport const LOGOUT_SUCCESS = 'LOGOUT_SUCCESS';\n\n// THESE CREATORS MAKE ACTIONS ASSOCIATED WITH USER ACCOUNTS\n\nexport function registerSuccess() {\n    return { type: 'REGISTER_SUCCESS' }\n};\nexport function registerError(error) { \n    return { type: 'REGISTER_ERROR', error }\n};\nexport function loginSuccess() {\n    return { type: 'LOGIN_SUCCESS' }\n};\nexport function loginError(error) {\n    return { type: 'LOGIN_ERROR', error }\n};\nexport function logoutSuccess() {\n    return { type: 'LOGOUT_SUCCESS' }\n};\n\n// THESE CREATORS MAKE ACTIONS FOR ASYNCHRONOUS TODO LIST UPDATES\nexport function createTodoList(todoList) {\n    return {\n        type: 'CREATE_TODO_LIST',\n        todoList\n    }\n}\nexport function createTodoListError(error) {\n    return {\n        type: 'CREATE_TODO_LIST_ERROR',\n        error\n    }\n}","import * as actionCreators from '../actions/actionCreators'\n\n// REDUCERS ARE CALLED WHEN AN ACTION IS DISPATCHED,\n// THEIR JOB IS TO ADVANCE THE STATE. THEY WILL UPDATE\n// AND RETURN THE NEW, UPDATED STATE\n\nconst initState = {};\n\nconst authReducer = (state = initState, action) => {\n  switch (action.type) {\n    case actionCreators.LOGIN_ERROR:\n      return {\n        ...state,\n        authError: 'Login fail',\n      };\n    case actionCreators.LOGIN_SUCCESS:\n      return {\n        ...state,\n        authError: null,\n      };\n    case actionCreators.LOGOUT_SUCCESS:\n      return state;\n    case actionCreators.REGISTER_SUCCESS:\n      return {\n        ...state,\n        authError: null,\n      };\n    case actionCreators.REGISTER_ERROR:\n      return {\n        ...state,\n        authError: action.err.message,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;","const initState = {\n    todoLists: []\n};\n\nconst todoListReducer = (state = initState, action) => {\n    switch (action.type) {\n        /* IF YOU HAVE ANY TODO LIST EDITING REDUCERS ADD THEM HERE */ \n        default:\n            return state;\n            break;\n    }\n};\n\nexport default todoListReducer;","import { combineReducers } from 'redux';\nimport { firestoreReducer } from 'redux-firestore'; // syncing firestore\nimport { firebaseReducer } from 'react-redux-firebase';\nimport authReducer from './authReducer';\nimport todoListReducer from './todoListReducer';\n\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  todoList: todoListReducer,\n  firestore: firestoreReducer,\n  firebase: firebaseReducer,\n});\n\nexport default rootReducer;","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { firebaseConnect } from 'react-redux-firebase';\nimport { logoutHandler } from '../../store/database/asynchHandler'\n\nclass LoggedInLinks extends React.Component {\n\n  // As in SignIn.jsx we need to use a function that gets as an argument firebase object\n  handleLogout = () => {\n    const { firebase } = this.props;\n    this.props.signOut(firebase);\n  }\n\n  render() {\n    const { profile } = this.props;\n    return (\n      <ul className=\"right\">\n        <li><NavLink to=\"/\" onClick={this.handleLogout}>Log Out</NavLink></li> {/* I left NavLink instead of anchor tag because I'm using airbnb eslint rules */}\n        <li><NavLink to=\"/\" className=\"btn btn-floating pink lighten-1\">{profile.initials}</NavLink></li>\n      </ul>\n    );\n  };\n}\n\nconst mapDispatchToProps = dispatch => ({\n  signOut: firebase => dispatch(logoutHandler(firebase)),\n});\n\nexport default compose(\n  firebaseConnect(),\n  connect(null, mapDispatchToProps),\n)(LoggedInLinks);","import * as actionCreators from '../actions/actionCreators.js'\n\nexport const loginHandler = ({ credentials, firebase }) => (dispatch, getState) => {\n    firebase.auth().signInWithEmailAndPassword(\n      credentials.email,\n      credentials.password,\n    ).then(() => {\n      console.log(\"LOGIN_SUCCESS\");\n      dispatch({ type: 'LOGIN_SUCCESS' });\n    }).catch((err) => {\n      dispatch({ type: 'LOGIN_ERROR', err });\n    });\n  };\n\nexport const logoutHandler = (firebase) => (dispatch, getState) => {\n    firebase.auth().signOut().then(() => {\n        dispatch(actionCreators.logoutSuccess);\n    });\n};\n\nexport const registerHandler = (newUser, firebase) => (dispatch, getState, { getFirestore }) => {\n    const firestore = getFirestore();\n    firebase.auth().createUserWithEmailAndPassword(\n        newUser.email,\n        newUser.password,\n    ).then(resp => firestore.collection('users').doc(resp.user.uid).set({\n        firstName: newUser.firstName,\n        lastName: newUser.lastName,\n        initials: `${newUser.firstName[0]}${newUser.lastName[0]}`,\n    })).then(() => {\n        dispatch(actionCreators.registerSuccess);\n    }).catch((err) => {\n        dispatch(actionCreators.registerError);\n    });\n};","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nclass LoggedOutLinks extends React.Component {\n  render() {\n    return (\n      <ul className = \"right\" >\n        <li><NavLink to=\"/register\">Register</NavLink></li>\n      </ul>\n    );\n  }\n}\n\nexport default LoggedOutLinks;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { compose } from 'redux';\nimport { firebaseConnect } from 'react-redux-firebase';\nimport LoggedInLinks from './LoggedInLinks';\nimport LoggedOutLinks from './LoggedOutLinks';\n\nclass Navbar extends React.Component {\n\n  render() {\n    const { auth, profile } = this.props;\n    const links = auth.uid ? <LoggedInLinks profile={profile} /> : <LoggedOutLinks />;\n\n    return (\n      <nav className=\"nav-wrapper grey darken-3\">\n        <div className=\"container\">\n          <Link to=\"/\" className=\"brand-logo\">@todo</Link>\n          {links}\n        </div>\n      </nav>\n    );\n  };\n}\n\nconst mapStateToProps = state => ({\n  auth: state.firebase.auth,\n  profile: state.firebase.profile,\n});\n\nexport default compose(\n  firebaseConnect(),\n  connect(mapStateToProps),\n)(Navbar);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { firebaseConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport { Redirect } from 'react-router-dom';\nimport { registerHandler } from '../../store/database/asynchHandler'\n\nclass RegisterScreen extends Component {\n  state = {\n    email: '',\n    password: '',\n    firstName: '',\n    lastName: '',\n  }\n\n  handleChange = (e) => {\n    const { target } = e;\n\n    this.setState(state => ({\n      ...state,\n      [target.id]: target.value,\n    }));\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    const { props, state } = this;\n    const { firebase } = props;\n    const newUser = { ...state };\n\n    props.register(newUser, firebase);\n  }\n\n  render() {\n    const { auth, authError } = this.props;\n    if (auth.uid) {\n      return <Redirect to=\"/\" />;\n    }\n\n    return (\n      <div className=\"container\">\n        <form onSubmit={this.handleSubmit} className=\"white\">\n          <h5 className=\"grey-text text-darken-3\">Register</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"email\">Email</label>\n            <input type=\"email\" name=\"email\" id=\"email\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"password\">Password</label>\n            <input type=\"password\" name=\"password\" id=\"password\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"firstName\">First Name</label>\n            <input type=\"text\" name=\"firstName\" id=\"firstName\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"lastName\">Last Name</label>\n            <input type=\"text\" name=\"lastName\" id=\"lastName\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <button type=\"submit\" className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\n            {authError ? <div className=\"red-text center\"><p>{authError}</p></div> : null}\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  auth: state.firebase.auth,\n  authError: state.auth.authError,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  register: (newUser, firebase) => dispatch(registerHandler(newUser, firebase)),\n});\n\nexport default compose(\n  firebaseConnect(),\n  connect(mapStateToProps, mapDispatchToProps),\n)(RegisterScreen);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { firebaseConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport { Redirect } from 'react-router-dom';\n\nimport { loginHandler } from '../../store/database/asynchHandler'\n\nclass LoginScreen extends Component {\n  state = {\n    email: '',\n    password: '',\n  }\n\n  handleChange = (e) => {\n    const { target } = e;\n\n    this.setState(state => ({\n      ...state,\n      [target.id]: target.value,\n    }));\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    // As we use react-redux-firebas-v3 we need to pass firebase object to\n    // authActions to be authorized by using firebse.auth method\n    const { props, state } = this;\n    const { firebase } = props;\n    const credentials = { ...state };\n    const authData = {\n      firebase,\n      credentials,\n    };\n\n    props.login(authData);\n  }\n\n  render() {\n    const { auth, authError } = this.props;\n    if (auth.uid) {\n      return <Redirect to=\"/\" />;\n    }\n\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <form onSubmit={this.handleSubmit} className=\"col s4 white\">\n            <h5 className=\"grey-text text-darken-3\">Login</h5>\n            <div className=\"input-field\">\n              <label htmlFor=\"email\">Email</label>\n              <input className=\"active\" type=\"email\" name=\"email\" id=\"email\" onChange={this.handleChange} />\n            </div>\n            <div className=\"input-field\">\n              <label htmlFor=\"password\">Password</label>\n              <input className=\"active\" type=\"password\" name=\"password\" id=\"password\" onChange={this.handleChange} />\n            </div>\n            <div className=\"input-field\">\n              <button type=\"submit\" className=\"btn pink lighten-1 z-depth-0\">Login</button>\n              {authError ? <div className=\"red-text center\"><p>{authError}</p></div> : null}\n            </div>\n          </form>\n\n          <div className=\"col s8 banner\">\n            @todo<br />\n            List Maker\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  authError: state.auth.authError,\n  auth: state.firebase.auth,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  login: authData => dispatch(loginHandler(authData)),\n});\n\n// We need firebaseConnect function to provide to this component\n// firebase object with auth method.\n// You can find more information on the link below\n// http://docs.react-redux-firebase.com/history/v3.0.0/docs/auth.html\nexport default compose(\n  firebaseConnect(),\n  connect(mapStateToProps, mapDispatchToProps),\n)(LoginScreen);","import React from 'react';\n\nclass TodoListCard extends React.Component {\n\n    render() {\n        const { todoList } = this.props;\n        console.log(\"TodoListCard, todoList.id: \" + todoList.id);\n        return (\n            <div className=\"card z-depth-0 todo-list-link\">\n                <div className=\"card-content grey-text text-darken-3\">\n                    <span className=\"card-title\">{todoList.name}</span>\n                </div>\n            </div>\n        );\n    }\n}\nexport default TodoListCard;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport TodoListCard from './TodoListCard';\n\nclass TodoListLinks extends React.Component {\n\n    render() {\n        const todoLists = this.props.todoLists;\n        console.log(todoLists);\n        return (\n            <div className=\"todo-lists section\">\n                {todoLists && todoLists.map(todoList => (\n                    <Link to={'/todoList/' + todoList.id} key={todoList.id}>\n                        <TodoListCard todoList={todoList}/>\n                    </Link>\n                ))}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        todoLists: state.firestore.ordered.todoLists,\n        auth: state.firebase.auth,\n    };\n};\n\nexport default compose(connect(mapStateToProps))(TodoListLinks);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { NavLink, Redirect } from 'react-router-dom';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport TodoListLinks from './TodoListLinks'\nimport { getFirestore } from 'redux-firestore';\nimport { Button } from 'react-materialize';\n\nclass HomeScreen extends Component {\n    state = {\n        redirect: false,\n        redirect_list: null\n    }\n    handleNewList = () => {\n        const fireStore = getFirestore();\n        let temp = new Date().getTime();\n        let l = Object.keys(this.props.todoLists).length;\n        fireStore.collection('todoLists').add({\n                key: l,\n                name: \"Unknown\",\n                owner: \"Unknown\",\n                items: new Array(),\n                time: temp\n            }).then((list) => {\n                console.log(\"List Created\");\n                console.log(list.id);\n                this.setState({redirect_list: list.id});\n                this.setState({redirect: true});\n            }).catch((err) => {\n                console.log(err);\n            });\n        this.forceUpdate();\n    }\n\n    render() {\n        if (!this.props.auth.uid) {\n            return <Redirect to=\"/login\" />;\n        }\n\n        if(this.state.redirect){\n            return <Redirect to={\"/todolist/\"+ this.state.redirect_list} key={this.state.redirect_list} />;\n        }\n        \n        let temp = new Date().getTime();\n        console.log(temp);\n\n        return (\n            <div className=\"dashboard container\">\n                <div className=\"row\">\n                    <div className=\"col s12 m4\">\n                        <TodoListLinks />\n                    </div>\n\n                    <div className=\"col s8\">\n                        <div className=\"banner\">\n                            @todo<br />\n                            List Maker\n                        </div>\n                        \n                        <div className=\"home_new_list_container\">\n                                <Button large className=\"home_new_list_button btn-padding\" onClick={this.handleNewList}>\n                                    Create a New To Do List\n                                </Button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    const { todoLists } = state.firestore.data;\n    return {\n        todoLists,\n        auth: state.firebase.auth\n    };\n};\n\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([\n      { collection: 'todoLists',\n        orderBy: ['time', 'desc'] },\n    ]),\n)(HomeScreen);","import React from 'react';\nimport { Card, Row, Col, Button, Icon } from 'react-materialize';\nimport { getFirestore } from 'redux-firestore';\n\nclass ItemCard extends React.Component {\n    moveUp(e,i){\n        e.preventDefault();\n        const { item, todoList } = this.props;\n        if (i === 0)\n        {\n            return;\n        }\n        let list = todoList.items;\n        if ( list[i-1] != null){\n            let temp = list[i];\n            list[i] = list[i-1];\n            list[i-1] = temp;\n            list[i].key = i;\n            list[i-1].key = i-1;\n            list[i].id = i;\n            list[i-1].id = i-1;\n        }\n        const fireStore = getFirestore();\n        fireStore.collection('todoLists').doc(todoList.id).update({\n            items: list\n        });\n    }\n    moveDown(e,i){\n        e.preventDefault();\n        const { item, todoList } = this.props;\n        if (i === todoList.items.length-1)\n        {\n            return;\n        }\n        let list = todoList.items;\n        if ( list[i+1] != null){\n            let temp = list[i];\n            list[i] = list[i+1];\n            list[i+1] = temp;\n            list[i].key = i;\n            list[i+1].key = i+1;\n            list[i].id = i;\n            list[i+1].id = i+1;\n        }\n        const fireStore = getFirestore();\n        fireStore.collection('todoLists').doc(todoList.id).update({\n            items: list\n        });\n    }\n    deleteItem(e,i){\n        e.preventDefault();\n        const { item, todoList } = this.props;\n        let k = 0,\n            list = todoList.items;\n        for (let j = 0; j < list.length; j++) {\n            if(i===j){\n\n            }\n            else{\n                list[k] = list[j];\n                list[k].key = k;\n                list[k].id = k;\n                k++;\n            }\n        }\n        list.pop();\n        const fireStore = getFirestore();\n        fireStore.collection('todoLists').doc(todoList.id).update({\n            items: list\n        });\n    }\n    render() {\n        const { item, todoList } = this.props;\n        return (\n            <Card className=\"teal black-text lighten-4\">\n                <Row>\n                    <Col s={3} className=\"teal lighten-4\">\n                        <h5><b>{item.description}</b></h5>\n                        Assigned to: {item.assigned_to}\n                    </Col>\n                    <Col s={3} className=\"teal lighten-4\">\n                        <h6><b>{item.due_date}</b></h6>\n                    </Col>\n                    <Col s={3} className=\"teal lighten-4\">\n                        <h6><b>\n                            {item.completed ? (\n                                <div>Completed</div>\n                            ):(\n                                <div>Pending</div>\n                            )}\n                        </b></h6>\n                    </Col>\n                    <Col s={3} className=\"teal lighten-4\">\n                        <Button\n                            floating\n                            fab={{direction: 'left'}}\n                            className=\"red\"\n                            large\n                            >\n                            <Button floating className=\"red action-index\" onClick={e => this.moveUp(e,item.id)}><h5 className=\"action-button\">⇧</h5></Button>\n                            <Button floating className=\"yellow darken-1 action-index\" onClick={e => this.moveDown(e,item.id)}><h5 className=\"action-button\">⇩</h5></Button>\n                            <Button floating className=\"green action-index\" onClick={e => this.deleteItem(e,item.id)}><h5 className=\"action-button\">x</h5></Button>\n                        </Button>\n                    </Col>\n                </Row>\n            </Card>\n        );\n    }\n}\nexport default ItemCard;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport ItemCard from './ItemCard';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { Card, Row, Col } from 'react-materialize';\nimport { getFirestore } from 'redux-firestore';\n\nclass ItemsList extends React.Component {\n    constructor(props) {\n        super(props);\n        this.currentItemSortCriteria = null;\n        this.newItemSortCriteria = null;\n        this.flipped = false;\n    }\n    sortTasks(sortingCriteria) {\n        this.flip = false;\n        this.newItemSortCriteria = sortingCriteria;\n        const { todoList } = this.props;\n        let list = todoList.items;\n        console.log(this.newItemSortCriteria+this.currentItemSortCriteria);\n        if ( this.newItemSortCriteria === this.currentItemSortCriteria){\n            this.flip = true;\n        }\n        if(this.flip && !this.flipped){\n            if (this.newItemSortCriteria === \"task\"){\n                list.sort(this.compareTaskFlip);\n            }\n            else if(this.newItemSortCriteria === \"dueDate\"){\n                list.sort(this.compareDueDateFlip);\n            }\n            else if(this.newItemSortCriteria === \"status\"){\n                list.sort(this.compareStatusFlip);\n            }\n            this.flipped = true;\n        }\n        else{\n            if (this.newItemSortCriteria === \"task\"){\n                list.sort(this.compareTask);\n            }\n            else if(this.newItemSortCriteria === \"dueDate\"){\n                list.sort(this.compareDueDate);\n            }\n            else if(this.newItemSortCriteria === \"status\"){\n                list.sort(this.compareStatus);\n            }\n            this.flipped = false;\n        }\n        this.currentItemSortCriteria = sortingCriteria;\n        for(let i = 0; i < Object.keys(list).length; i++){\n            list[i].key = i;\n            list[i].id = i;\n        }\n        const fireStore = getFirestore();\n        fireStore.collection('todoLists').doc(todoList.id).update({\n            items: list\n        });\n    }\n    // SORT BY ITEM DESCRIPTION\n    compareTask(item1,item2) {\n        if (item1.description < item2.description)\n            return -1;\n        else if (item1.description > item2.description)\n            return 1;\n        else\n            return 0;\n    }\n\n    compareDueDate(item1,item2) {\n        if (item1.due_date < item2.due_date)\n            return -1;\n        else if (item1.due_date > item2.due_date)\n            return 1;\n        else\n            return 0;\n    }\n    \n    // SORT BY COMPLETED\n    compareStatus(item1,item2) {\n        if (item1.completed < item2.completed)\n            return -1;\n        else if (item1.completed > item2.completed)\n            return 1;\n        else\n            return 0;\n    }\n    compareTaskFlip(item1,item2) {\n        let temp = item1;\n            item1 = item2;\n            item2 = temp;\n        if (item1.description < item2.description)\n            return -1;\n        else if (item1.description > item2.description)\n            return 1;\n        else\n            return 0;\n    }\n\n    compareDueDateFlip(item1,item2) {\n        let temp = item1;\n            item1 = item2;\n            item2 = temp;\n        if (item1.due_date < item2.due_date)\n            return -1;\n        else if (item1.due_date > item2.due_date)\n            return 1;\n        else\n            return 0;\n    }\n    \n    // SORT BY COMPLETED\n    compareStatusFlip(item1,item2) {\n        let temp = item1;\n            item1 = item2;\n            item2 = temp;\n        if (item1.completed < item2.completed)\n            return -1;\n        else if (item1.completed > item2.completed)\n            return 1;\n        else\n            return 0;\n    }\n    render() {\n        const todoList = this.props.todoList;\n        const items = todoList.items;\n        console.log(\"ItemsList: todoList.id \" + todoList.id);\n        return (\n            <div className=\"todo-lists section\">\n                <Card className=\"teal lighten-1\">\n                    <Row>\n                        <Col s={3} className=\"teal lighten-1\">\n                            <div onClick={() => this.sortTasks(\"task\")}>\n                                <h4 className=\"category\">Description</h4>\n                            </div> \n                        </Col>\n                        <Col s={3} className=\"teal lighten-1\">\n                            <div onClick={() => this.sortTasks(\"dueDate\")}>\n                                <h4 className=\"category\">Due Date</h4>\n                            </div> \n                        </Col>\n                        <Col s={3} className=\"teal lighten-1\">\n                            <div onClick={() => this.sortTasks(\"status\")}>\n                                <h4 className=\"category\">Status</h4>\n                            </div> \n                        </Col>\n                        <Col s={3} className=\"teal lighten-1\">\n                            <div>\n                                <h4 className=\"category\"></h4>\n                            </div> \n                        </Col>\n                    </Row>\n                </Card>\n                {items && items.map(function(item) {\n                    item.id = item.key;\n                    return (\n                        <Link to={'/editItem/' + todoList.id + '/'+item.id} todoList={todoList} item={item.id}>\n                            <ItemCard todoList={todoList} item={item}/>\n                        </Link>\n                    );})\n                }\n                <Link to={'/editItem/' + todoList.id + '/null'} todoList={todoList}>\n                    <Card className=\"teal lighten-1 add-card black-text\">\n                        +\n                    </Card>\n                </Link>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    const todoList = ownProps.todoList;\n    return {\n        todoList,\n        auth: state.firebase.auth,\n    };\n};\n\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([\n        { collection: 'todoLists' },\n    ]),\n)(ItemsList);","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport ItemsList from './ItemsList.js'\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { getFirestore } from 'redux-firestore';\nimport {Modal, Button, Textarea, Row, Col} from 'react-materialize';\nimport { Link } from 'react-router-dom';\n\nclass ListScreen extends Component {\n    constructor(props){\n        super(props);\n        const fireStore = getFirestore();\n        fireStore.collection('todoLists').doc(this.props.todoList.id).update({\n            time: new Date().getTime()\n        });\n    }\n    state = {\n        name: '',\n        owner: '',\n    }\n\n    handleChange = (e) => {\n        const { target } = e;\n\n        this.setState(state => ({\n            ...state,\n            [target.id]: target.value,\n        }));\n        const fireStore = getFirestore();\n        fireStore.collection('todoLists').doc(this.props.todoList.id).update({\n            name: document.getElementById(\"name\").value,\n            owner: document.getElementById(\"owner\").value,\n        });\n    }\n\n    deleteList = () => {\n        const fireStore = getFirestore();\n        fireStore.collection('todoLists').doc(this.props.todoList.id).delete().then(function() {\n            console.log(\"List removed.\");\n        }).catch(function(error) {\n            console.error(\"Error removing list: \", error);\n        });\n    }\n\n    render() {\n        const auth = this.props.auth;\n        const todoList = this.props.todoList;\n        if (!auth.uid) {\n            return <Redirect to=\"/\" />;\n        }\n\n        return (\n            <div className=\"container white\">\n                <Row>\n                    <Col s=\"6\">\n                        <h5 className=\"grey-text text-darken-3\">Todo List</h5>\n                    </Col>\n                    <Col className=\"trash-col\" s=\"6\">\n                        <Modal header=\"Delete List\" className=\"delete-modal\" id=\"deleteModal\" trigger={<Button className=\"trashcan\" large>&#128465;</Button>}>\n                        <div id=\"todo_delete_box\" className=\"inactive\">\n                            <b>Are you sure you want to delete this list?</b>\n                            <br/><br/>\n                            <Link to={'/'}>\n                                <Button className=\"btn-padding\" id=\"delete_confirm\"\n                                onClick={() => this.deleteList()}>Yes</Button>\n                            </Link>\n                            <Button className=\"btn-padding\" modal=\"close\" id=\"delete_cancel\">No</Button>\n                            <br/><br/>\n                            The list will not be retreivable.\n                        </div>\n                        </Modal>\n                    </Col>\n                </Row>\n                <div className=\"input-field\">\n                    <Textarea label=\"Name\" className=\"active\" type=\"text\" name=\"name\" id=\"name\" onChange={this.handleChange} value={todoList.name} />\n                </div>\n                <div className=\"input-field\">\n                    <Textarea label=\"Owner\" className=\"active\" type=\"text\" name=\"owner\" id=\"owner\" onChange={this.handleChange} value={todoList.owner} />\n                </div>\n                <ItemsList todoList={todoList} />\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  const { id } = ownProps.match.params;\n  const { todoLists } = state.firestore.data;\n  const todoList = todoLists ? todoLists[id] : null;\n  todoList.id = id;\n\n  return {\n    todoList,\n    todoLists,\n    auth: state.firebase.auth,\n  };\n};\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([\n    { collection: 'todoLists' },\n  ]),\n)(ListScreen);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { NavLink, Redirect } from 'react-router-dom';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { getFirestore } from 'redux-firestore';\nimport { Checkbox, Button, DatePicker, Textarea } from 'react-materialize';\n\nclass EditItem extends Component {\n    constructor(props){\n        super(props);\n        const { id,index } = this.props.match.params;\n        this.id = id;\n        this.index = index;\n        if (index === \"null\"){\n            this.todoItem = new Object();\n            this.blank = true;\n        }\n        else{\n            this.temp = this.props.todoLists[\"todoLists\"][id].items[index];\n            this.todoItem = new Object();\n            this.todoItem.assigned_to = this.temp.assigned_to;\n            this.todoItem.completed = this.temp.completed;\n            this.todoItem.description = this.temp.description\n            this.todoItem.due_date = this.temp.due_date;\n            this.todoItem.id = this.temp.id;\n            this.todoItem.key = this.temp.key;\n            console.log(this.todoItem);\n            this.blank = false;\n        }\n    }\n\n    state = {\n        redirect: false,\n        redirect_list: null\n    }\n\n    setItemProperty(item){\n        if (Object.keys(this.todoItem).length != 0) {\n            let description = document.getElementById(\"item_description_textfield\").value,\n                assigned = document.getElementById(\"item_assigned_to_textfield\").value,\n                due = document.getElementById(\"item_due_date_picker\").value,\n                comp = document.getElementById(\"item_completed_checkbox\").checked;\n            item.description = description;\n            item.assigned_to = assigned;\n            item.due_date = due;\n            item.completed = comp;\n        }\n        this.forceUpdate();\n    }\n\n    submit(k){\n        const { id,index } = this.props.match.params;\n        const fireStore = getFirestore();\n        let newItems = this.props.todoLists[\"todoLists\"][id].items;\n        if (k != null){\n            newItems.push({\n                \"key\" : k,\n                \"id\" : k,\n                \"description\" : document.getElementById(\"item_description_textfield\").value,\n                \"due_date\" : document.getElementById(\"item_due_date_picker\").value,\n                \"assigned_to\" : document.getElementById(\"item_assigned_to_textfield\").value,\n                \"completed\" : document.getElementById(\"item_completed_checkbox\").checked\n            });\n        }\n        else{\n            newItems[index] = this.todoItem;\n        }\n        console.log(newItems);\n        fireStore.collection('todoLists').doc(id).update({\n            items: newItems\n        });\n        this.setState({redirect_list: id});\n        this.setState({redirect: true});\n    }\n\n    cancel(item){\n        this.setState({redirect_list: this.id});\n        this.setState({redirect: true});\n    }\n\n    render() {\n        if (!this.props.auth.uid) {\n            return <Redirect to=\"/login\" />;\n        }\n\n        if(this.state.redirect){\n            return <Redirect to={\"/todolist/\"+ this.state.redirect_list} key={this.state.redirect_list} />;\n        }\n\n        return (\n            <div className=\"container white\">\n                <div id=\"item_form_container\">\n                    <span id=\"item_description_title\" className=\"item-form-text\">Item</span>\n                </div>\n                <br/>\n                <div id=\"item_form_container\">\n                    <span id=\"item_description_prompt\" className=\"item-form-text\">Description:</span>\n                    <Textarea type=\"text\" id=\"item_description_textfield\" \n                    value={this.todoItem != null ? this.todoItem.description : \"\"}\n                    onChange={() => this.setItemProperty(this.todoItem)}/>\n                </div>\n                <br/>\n                <div id=\"item_form_container\">\n                    <span id=\"item_assigned_to_prompt\" className=\"item-form-text\">Assigned to:</span>\n                    <Textarea type=\"text\" id=\"item_assigned_to_textfield\"\n                    value={this.todoItem != null ? this.todoItem.assigned_to : \"\"}\n                    onChange={() => this.setItemProperty(this.todoItem)}/>\n                </div>\n                <br/>\n                <div id=\"item_form_container\">\n                    <span id=\"item_due_date_prompt\" className=\"item-form-text\">Due Date:</span>\n                    <input type=\"date\" id=\"item_due_date_picker\"\n                    value={this.todoItem != null ? this.todoItem.due_date : \"\"}\n                    onChange={() => this.setItemProperty(this.todoItem)}/>\n                </div>\n                <br/>\n                <div id=\"item_form_container\">\n                    <span id=\"item_completed_prompt\" className=\"item-form-text item-check\">Completed:</span>\n                    <Checkbox id=\"item_completed_checkbox\"\n                    checked={this.todoItem != null ? this.todoItem.completed : false}\n                    onChange={() => this.setItemProperty(this.todoItem)}/>\n                </div>\n                <br/>\n                {this.blank ? (\n                    <div>\n                        <Button className=\"btn-padding\" id=\"item_form_submit_button\"\n                            onClick={() => this.submit(this.props.todoLists[\"todoLists\"][this.id].items.length)}>Submit</Button>\n                        <Button className=\"btn-padding\" id=\"item_form_cancel_button\"\n                            onClick={() => this.cancel(null)}>Cancel</Button>\n                    </div>\n                ) : (\n                    <div>\n                        <Button className=\"btn-padding\" id=\"item_form_submit_button\"\n                            onClick={() => this.submit(null)}>Submit</Button>\n                        <Button className=\"btn-padding\" id=\"item_form_cancel_button\"\n                            onClick={() => this.cancel(this.todoItem)}>Cancel</Button>\n                    </div>\n                )}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        todoLists: state.firestore.data,\n        auth: state.firebase.auth\n    };\n};\n\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([\n      { collection: 'todoLists' },\n    ]),\n)(EditItem);","import React from 'react'\nimport { connect } from 'react-redux';\nimport todoJson from './TestTodoListData.json'\nimport { getFirestore } from 'redux-firestore';\n\nclass DatabaseTester extends React.Component {\n\n    // NOTE, BY KEEPING THE DATABASE PUBLIC YOU CAN\n    // DO THIS ANY TIME YOU LIKE WITHOUT HAVING\n    // TO LOG IN\n    handleClear = () => {\n        const fireStore = getFirestore();\n        fireStore.collection('todoLists').get().then(function(querySnapshot){\n            querySnapshot.forEach(function(doc) {\n                console.log(\"deleting \" + doc.id);\n                fireStore.collection('todoLists').doc(doc.id).delete();\n            })\n        });\n    }\n\n    handleReset = () => {\n        const fireStore = getFirestore();\n        todoJson.todoLists.forEach(todoListJson => {\n            let temp = new Date().getTime();\n            console.log(temp);\n            fireStore.collection('todoLists').add({\n                    key: todoListJson.key,\n                    name: todoListJson.name,\n                    owner: todoListJson.owner,\n                    items: todoListJson.items,\n                    time: temp\n                }).then(() => {\n                    console.log(\"DATABASE RESET\");\n                }).catch((err) => {\n                    console.log(err);\n                });\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                <button onClick={this.handleClear}>Clear Database</button>\n                <button onClick={this.handleReset}>Reset Database</button>\n            </div>)\n    }\n}\n\nconst mapStateToProps = function (state) {\n    return {\n        auth: state.firebase.auth,\n        firebase: state.firebase\n    };\n}\n\nexport default connect(mapStateToProps)(DatabaseTester);","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { firebaseConnect } from 'react-redux-firebase';\n\nimport Navbar from './components/navbar/Navbar.js';\nimport RegisterScreen from './components/register_screen/RegisterScreen.js';\nimport LoginScreen from './components/login_screen/LoginScreen.js';\nimport HomeScreen from './components/home_screen/HomeScreen.js';\nimport ListScreen from './components/list_screen/ListScreen.js';\nimport EditItem from './components/edit_screen/EditItem.js';\nimport DatabaseTester from './test/DatabaseTester'\n\nclass App extends Component {\n  render() {\n    const { auth } = this.props;\n\n    // if auth is loaded then we render App.\n    // But if not then we doesn't render the one.\n    if (auth.isLoaded) {\n      return (\n        <BrowserRouter>\n          <div className=\"App\">\n            <Navbar />\n            <Switch>\n              <Route exact path=\"/\" component={HomeScreen} />\n              <Route path=\"/databaseTester\" component={DatabaseTester} />\n              <Route path=\"/register\" component={RegisterScreen} />\n              <Route path=\"/login\" component={LoginScreen} />\n              <Route path=\"/todoList/:id\" component={ListScreen} />\n              <Route path =\"/editItem/:id/:index\" component={EditItem} />\n              <Route path=\"/:any\" component={HomeScreen} />\n            </Switch>\n          </div>\n        </BrowserRouter>\n      );\n    }\n\n    return null;\n  }\n}\n\nconst mapStateToProps = state => ({\n  auth: state.firebase.auth,\n});\n\nexport default compose(\n  firebaseConnect(),\n  connect(mapStateToProps),\n)(App);","/* eslint-disable no-underscore-dangle */\nimport React from 'react';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { createFirestoreInstance, reduxFirestore, getFirestore } from 'redux-firestore';\nimport { ReactReduxFirebaseProvider, getFirebase } from 'react-redux-firebase';\nimport firebase from '../config/firebaseConfig';\nimport rootReducer from './reducers/rootReducer';\nimport App from '../App';\n\nclass ReactReduxFirebaseApp extends React.Component {\n    constructor(props) {\n        super(props);\n\n        // We enhance compose in order to use Redux DevTools extension\n        // https://chrome.google.com/webstore/detail/redux-devtools/lmhkpmbekcpmknklioeibfkpmmfibljd\n        const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n        // Create config for rrfProps object. We need this to pass it in the ReactReduxFirebaseProvider component\n        const rrfConfig = {\n            useFirestoreForProfile: true, // Firestore for Profile instead of Realtime DB\n            userProfile: 'users',\n            attachAuthIsReady: true,\n        };\n\n        const store = createStore(rootReducer,\n            composeEnhancers(\n                applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n                reduxFirestore(firebase), // still need this line to get access to firestore via getFirestore function (in projectActions, for example)\n            )\n        );\n\n        const rrfProps = {\n            firebase,\n            config: rrfConfig,\n            dispatch: store.dispatch,\n            createFirestoreInstance, // Create firestore instead of craete it in fbConfig.js\n        };\n\n        this.state = {\n            store: store,\n            rrfProps: rrfProps\n        }\n    }\n\n    render() {\n        return (\n            <Provider store={this.state.store}>\n                <ReactReduxFirebaseProvider {...this.state.rrfProps}>\n                    <App />\n                </ReactReduxFirebaseProvider>\n            </Provider>\n        )\n    }\n}\n\nexport default ReactReduxFirebaseApp","/* eslint-disable no-underscore-dangle */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './css/todo_layout.css'\nimport './css/todo_style.css'\nimport * as serviceWorker from './serviceWorker';\n\nimport ReactReduxFirebaseApp from './store/ReactReduxFirebaseApp'\n\nReactDOM.render(\n  <ReactReduxFirebaseApp />, document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();"],"sourceRoot":""}